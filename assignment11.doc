Assignment - 11 A Job Ready Bootcamp in C++, DSA and IOT MySirG
More on functions in C Language

1. Write a function to calculate LCM of two numbers. (TSRS)
int LCM(int a, int b)
{
    int i;
    for(i=1; i<=a*b; i++)
    {
        if((i%a==0)&&(i%b==0))
        {
            return i;
        }
    }
}
2. Write a function to calculate HCF of two numbers. (TSRS)
int HCF(int a, int b)
{
    int i, hcf, min;
    min=a<b?a:b;
    for(i=1; i<=min; i++)
    {
        if((a%i==0)&&(b%i==0))
        {
            return i;
        }
    }
}
3. Write a function to check whether a given number is Prime or not. (TSRS)
int isPrime(int n)
{
    for(int i=2; i<n-1; i++)
    {
        if(n%2==0)
            return 0;
        else
            return 1;
    }
}
4. Write a function to find the next prime number of a given number. (TSRS)
int isPrime(int n)
{
    for (int i = 2; i <= n/2; i++)
    {
        if (n % i == 0)
            return 0;
    }
    return 1;
}
int nextPrime(int n)
{
    int next = n + 1;
    while (1)
    {
        if (isPrime(next))
            return next;
        next++;
    }
}
int main()
{
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    int next = nextPrime(num);
    printf("The next prime number after %d is %d\n", num, next);
    return 0;
}
5. Write a function to print first N prime numbers (TSRN)
int Prime(int n)
{
    int i,j,count=0;
    for (i = n; i >0; i++)
    {
        count=0;
        for (j = 1; j <=i; j++)
       {
         if(i%j==0)
            count++;
       }
       if(count==2)
   {
       return i;
   }
6. Write a function to print all Prime numbers between two given numbers. (TSRN)
#include <stdio.h>
int isPrime(int num) {
    if (num <= 1) {
        return 0;
    }
    for (int i = 2; i <= num / 2; i++) {
        if (num % i == 0) {
            return 0;
        }
    }
    return 1;
}

void printPrimes(int a, int b) {
    int flag = 0;
    for (int i = a; i <= b; i++) {
        if (isPrime(i)) {
            printf("%d ", i);
            flag = 1;
        }
    }
    if (!flag) {
        printf("No prime numbers found between %d and %d", a, b);
    }
}

int main() {
    int a, b;

    printf("Enter two numbers: ");
    scanf("%d %d", &a, &b);

    printf("Prime numbers between %d and %d are: ", a, b);
    printPrimes(a, b);

    return 0;
}
7. Write a function to print first N terms of Fibonacci series (TSRN)
#include<stdio.h>
void Nfibbo(int n)
{
    int t1=0,t2=1, nextTerm;
    printf("%d,%d, ",t1,t2);
    for(int i=2; i<n; i++)
    {
       nextTerm=t1+t2;
       t1=t2;
       t2=nextTerm;
       printf("%d, ",nextTerm );
    }
}

int main()
{
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    printf("Fibonacci series: ");
    Nfibbo(num);
    return 0;
}
8. Write a function to print PASCAL Triangle. (TSRN)
int pascal(int n)
{
    int i, j, s, pas;
    for(i=0; i<=n; i++)
    {
        for(s=n-1; s>=i; s--)
        {
            printf(" ");
        }
            for(j=0; j<=i; j++)
        {
            pas=comb(i,j);
            if(i%2!=0)
                printf("%d ",pas);
            else
                printf("%d ",pas);
        }
        printf("\n");
    }
}
9. Write a program in C to find the square of any number using the function.
#include <stdio.h>
double square(double num)
{
    return (num * num);
}
int main()
{
    int num;
    double n;
	printf("\nfind square of any number :\n");
    scanf("%d", &num);
    n = square(num);
    printf("The square of %d is : %.2f\n", num, n);
    return 0;
}
10. Write a program in C to find the sum of the series 1! /1+2!/2+3!/3+4!/4+5!/5 using the function
#include <stdio.h>
int fact(int);
int fact(int n)
    {
        int num=0,f=1;
        while(num<=n-1)
        {
            f =f+f*num;
            num++;
        }
    return f;
    }
void main()
{
    int sum;
    sum=fact(1)/1+fact(2)/2+fact(3)/3+fact(4)/4+fact(5)/5;
	printf("\n\n Function : find the sum of 1!/1+2!/2+3!/3+4!/4+5!/5 :\n");
    printf("The sum of the series is : %d\n\n",sum);
}